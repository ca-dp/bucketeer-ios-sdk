//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: proto/environment/service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import GRPC
import NIO
import NIOHTTP1
import SwiftProtobuf


/// Usage: instantiate Bucketeer_Environment_EnvironmentServiceClient, then call methods of this protocol to make API calls.
internal protocol Bucketeer_Environment_EnvironmentServiceClientProtocol: GRPCClient {
  func getEnvironment(
    _ request: Bucketeer_Environment_GetEnvironmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bucketeer_Environment_GetEnvironmentRequest, Bucketeer_Environment_GetEnvironmentResponse>

  func getEnvironmentByNamespace(
    _ request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bucketeer_Environment_GetEnvironmentByNamespaceRequest, Bucketeer_Environment_GetEnvironmentByNamespaceResponse>

  func listEnvironments(
    _ request: Bucketeer_Environment_ListEnvironmentsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bucketeer_Environment_ListEnvironmentsRequest, Bucketeer_Environment_ListEnvironmentsResponse>

  func createEnvironment(
    _ request: Bucketeer_Environment_CreateEnvironmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bucketeer_Environment_CreateEnvironmentRequest, Bucketeer_Environment_CreateEnvironmentResponse>

  func updateEnvironment(
    _ request: Bucketeer_Environment_UpdateEnvironmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bucketeer_Environment_UpdateEnvironmentRequest, Bucketeer_Environment_UpdateEnvironmentResponse>

  func deleteEnvironment(
    _ request: Bucketeer_Environment_DeleteEnvironmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Bucketeer_Environment_DeleteEnvironmentRequest, Bucketeer_Environment_DeleteEnvironmentResponse>

}

extension Bucketeer_Environment_EnvironmentServiceClientProtocol {

  /// Unary call to GetEnvironment
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEnvironment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getEnvironment(
    _ request: Bucketeer_Environment_GetEnvironmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bucketeer_Environment_GetEnvironmentRequest, Bucketeer_Environment_GetEnvironmentResponse> {
    return self.makeUnaryCall(
      path: "/bucketeer.environment.EnvironmentService/GetEnvironment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Unary call to GetEnvironmentByNamespace
  ///
  /// - Parameters:
  ///   - request: Request to send to GetEnvironmentByNamespace.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getEnvironmentByNamespace(
    _ request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bucketeer_Environment_GetEnvironmentByNamespaceRequest, Bucketeer_Environment_GetEnvironmentByNamespaceResponse> {
    return self.makeUnaryCall(
      path: "/bucketeer.environment.EnvironmentService/GetEnvironmentByNamespace",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Unary call to ListEnvironments
  ///
  /// - Parameters:
  ///   - request: Request to send to ListEnvironments.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func listEnvironments(
    _ request: Bucketeer_Environment_ListEnvironmentsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bucketeer_Environment_ListEnvironmentsRequest, Bucketeer_Environment_ListEnvironmentsResponse> {
    return self.makeUnaryCall(
      path: "/bucketeer.environment.EnvironmentService/ListEnvironments",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Unary call to CreateEnvironment
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateEnvironment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func createEnvironment(
    _ request: Bucketeer_Environment_CreateEnvironmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bucketeer_Environment_CreateEnvironmentRequest, Bucketeer_Environment_CreateEnvironmentResponse> {
    return self.makeUnaryCall(
      path: "/bucketeer.environment.EnvironmentService/CreateEnvironment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Unary call to UpdateEnvironment
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateEnvironment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updateEnvironment(
    _ request: Bucketeer_Environment_UpdateEnvironmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bucketeer_Environment_UpdateEnvironmentRequest, Bucketeer_Environment_UpdateEnvironmentResponse> {
    return self.makeUnaryCall(
      path: "/bucketeer.environment.EnvironmentService/UpdateEnvironment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }

  /// Unary call to DeleteEnvironment
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteEnvironment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteEnvironment(
    _ request: Bucketeer_Environment_DeleteEnvironmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Bucketeer_Environment_DeleteEnvironmentRequest, Bucketeer_Environment_DeleteEnvironmentResponse> {
    return self.makeUnaryCall(
      path: "/bucketeer.environment.EnvironmentService/DeleteEnvironment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions
    )
  }
}

internal final class Bucketeer_Environment_EnvironmentServiceClient: Bucketeer_Environment_EnvironmentServiceClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions

  /// Creates a client for the bucketeer.environment.EnvironmentService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  internal init(channel: GRPCChannel, defaultCallOptions: CallOptions = CallOptions()) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
  }
}

