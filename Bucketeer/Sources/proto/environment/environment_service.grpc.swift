//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: proto/environment/service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Bucketeer_Environment_EnvironmentServiceGetEnvironmentCall: ClientCallUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceGetEnvironmentCallBase: ClientCallUnaryBase<Bucketeer_Environment_GetEnvironmentRequest, Bucketeer_Environment_GetEnvironmentResponse>, Bucketeer_Environment_EnvironmentServiceGetEnvironmentCall {
  override class var method: String { return "/bucketeer.environment.EnvironmentService/GetEnvironment" }
}

internal protocol Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceCall: ClientCallUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceCallBase: ClientCallUnaryBase<Bucketeer_Environment_GetEnvironmentByNamespaceRequest, Bucketeer_Environment_GetEnvironmentByNamespaceResponse>, Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceCall {
  override class var method: String { return "/bucketeer.environment.EnvironmentService/GetEnvironmentByNamespace" }
}

internal protocol Bucketeer_Environment_EnvironmentServiceListEnvironmentsCall: ClientCallUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceListEnvironmentsCallBase: ClientCallUnaryBase<Bucketeer_Environment_ListEnvironmentsRequest, Bucketeer_Environment_ListEnvironmentsResponse>, Bucketeer_Environment_EnvironmentServiceListEnvironmentsCall {
  override class var method: String { return "/bucketeer.environment.EnvironmentService/ListEnvironments" }
}

internal protocol Bucketeer_Environment_EnvironmentServiceCreateEnvironmentCall: ClientCallUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceCreateEnvironmentCallBase: ClientCallUnaryBase<Bucketeer_Environment_CreateEnvironmentRequest, Bucketeer_Environment_CreateEnvironmentResponse>, Bucketeer_Environment_EnvironmentServiceCreateEnvironmentCall {
  override class var method: String { return "/bucketeer.environment.EnvironmentService/CreateEnvironment" }
}

internal protocol Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentCall: ClientCallUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentCallBase: ClientCallUnaryBase<Bucketeer_Environment_UpdateEnvironmentRequest, Bucketeer_Environment_UpdateEnvironmentResponse>, Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentCall {
  override class var method: String { return "/bucketeer.environment.EnvironmentService/UpdateEnvironment" }
}

internal protocol Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentCall: ClientCallUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentCallBase: ClientCallUnaryBase<Bucketeer_Environment_DeleteEnvironmentRequest, Bucketeer_Environment_DeleteEnvironmentResponse>, Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentCall {
  override class var method: String { return "/bucketeer.environment.EnvironmentService/DeleteEnvironment" }
}


/// Instantiate Bucketeer_Environment_EnvironmentServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Bucketeer_Environment_EnvironmentServiceService: ServiceClient {
  /// Synchronous. Unary.
  func getEnvironment(_ request: Bucketeer_Environment_GetEnvironmentRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_GetEnvironmentResponse
  /// Asynchronous. Unary.
  @discardableResult
  func getEnvironment(_ request: Bucketeer_Environment_GetEnvironmentRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_GetEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceGetEnvironmentCall

  /// Synchronous. Unary.
  func getEnvironmentByNamespace(_ request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_GetEnvironmentByNamespaceResponse
  /// Asynchronous. Unary.
  @discardableResult
  func getEnvironmentByNamespace(_ request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_GetEnvironmentByNamespaceResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceCall

  /// Synchronous. Unary.
  func listEnvironments(_ request: Bucketeer_Environment_ListEnvironmentsRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_ListEnvironmentsResponse
  /// Asynchronous. Unary.
  @discardableResult
  func listEnvironments(_ request: Bucketeer_Environment_ListEnvironmentsRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_ListEnvironmentsResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceListEnvironmentsCall

  /// Synchronous. Unary.
  func createEnvironment(_ request: Bucketeer_Environment_CreateEnvironmentRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_CreateEnvironmentResponse
  /// Asynchronous. Unary.
  @discardableResult
  func createEnvironment(_ request: Bucketeer_Environment_CreateEnvironmentRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_CreateEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceCreateEnvironmentCall

  /// Synchronous. Unary.
  func updateEnvironment(_ request: Bucketeer_Environment_UpdateEnvironmentRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_UpdateEnvironmentResponse
  /// Asynchronous. Unary.
  @discardableResult
  func updateEnvironment(_ request: Bucketeer_Environment_UpdateEnvironmentRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_UpdateEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentCall

  /// Synchronous. Unary.
  func deleteEnvironment(_ request: Bucketeer_Environment_DeleteEnvironmentRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_DeleteEnvironmentResponse
  /// Asynchronous. Unary.
  @discardableResult
  func deleteEnvironment(_ request: Bucketeer_Environment_DeleteEnvironmentRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_DeleteEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentCall

}

internal extension Bucketeer_Environment_EnvironmentServiceService {
  /// Synchronous. Unary.
  func getEnvironment(_ request: Bucketeer_Environment_GetEnvironmentRequest) throws -> Bucketeer_Environment_GetEnvironmentResponse {
    return try self.getEnvironment(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getEnvironment(_ request: Bucketeer_Environment_GetEnvironmentRequest, completion: @escaping (Bucketeer_Environment_GetEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceGetEnvironmentCall {
    return try self.getEnvironment(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getEnvironmentByNamespace(_ request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest) throws -> Bucketeer_Environment_GetEnvironmentByNamespaceResponse {
    return try self.getEnvironmentByNamespace(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getEnvironmentByNamespace(_ request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest, completion: @escaping (Bucketeer_Environment_GetEnvironmentByNamespaceResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceCall {
    return try self.getEnvironmentByNamespace(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func listEnvironments(_ request: Bucketeer_Environment_ListEnvironmentsRequest) throws -> Bucketeer_Environment_ListEnvironmentsResponse {
    return try self.listEnvironments(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func listEnvironments(_ request: Bucketeer_Environment_ListEnvironmentsRequest, completion: @escaping (Bucketeer_Environment_ListEnvironmentsResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceListEnvironmentsCall {
    return try self.listEnvironments(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func createEnvironment(_ request: Bucketeer_Environment_CreateEnvironmentRequest) throws -> Bucketeer_Environment_CreateEnvironmentResponse {
    return try self.createEnvironment(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func createEnvironment(_ request: Bucketeer_Environment_CreateEnvironmentRequest, completion: @escaping (Bucketeer_Environment_CreateEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceCreateEnvironmentCall {
    return try self.createEnvironment(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func updateEnvironment(_ request: Bucketeer_Environment_UpdateEnvironmentRequest) throws -> Bucketeer_Environment_UpdateEnvironmentResponse {
    return try self.updateEnvironment(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func updateEnvironment(_ request: Bucketeer_Environment_UpdateEnvironmentRequest, completion: @escaping (Bucketeer_Environment_UpdateEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentCall {
    return try self.updateEnvironment(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func deleteEnvironment(_ request: Bucketeer_Environment_DeleteEnvironmentRequest) throws -> Bucketeer_Environment_DeleteEnvironmentResponse {
    return try self.deleteEnvironment(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func deleteEnvironment(_ request: Bucketeer_Environment_DeleteEnvironmentRequest, completion: @escaping (Bucketeer_Environment_DeleteEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentCall {
    return try self.deleteEnvironment(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Bucketeer_Environment_EnvironmentServiceServiceClient: ServiceClientBase, Bucketeer_Environment_EnvironmentServiceService {
  /// Synchronous. Unary.
  internal func getEnvironment(_ request: Bucketeer_Environment_GetEnvironmentRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_GetEnvironmentResponse {
    return try Bucketeer_Environment_EnvironmentServiceGetEnvironmentCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getEnvironment(_ request: Bucketeer_Environment_GetEnvironmentRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_GetEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceGetEnvironmentCall {
    return try Bucketeer_Environment_EnvironmentServiceGetEnvironmentCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getEnvironmentByNamespace(_ request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_GetEnvironmentByNamespaceResponse {
    return try Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getEnvironmentByNamespace(_ request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_GetEnvironmentByNamespaceResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceCall {
    return try Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func listEnvironments(_ request: Bucketeer_Environment_ListEnvironmentsRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_ListEnvironmentsResponse {
    return try Bucketeer_Environment_EnvironmentServiceListEnvironmentsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func listEnvironments(_ request: Bucketeer_Environment_ListEnvironmentsRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_ListEnvironmentsResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceListEnvironmentsCall {
    return try Bucketeer_Environment_EnvironmentServiceListEnvironmentsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func createEnvironment(_ request: Bucketeer_Environment_CreateEnvironmentRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_CreateEnvironmentResponse {
    return try Bucketeer_Environment_EnvironmentServiceCreateEnvironmentCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func createEnvironment(_ request: Bucketeer_Environment_CreateEnvironmentRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_CreateEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceCreateEnvironmentCall {
    return try Bucketeer_Environment_EnvironmentServiceCreateEnvironmentCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func updateEnvironment(_ request: Bucketeer_Environment_UpdateEnvironmentRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_UpdateEnvironmentResponse {
    return try Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func updateEnvironment(_ request: Bucketeer_Environment_UpdateEnvironmentRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_UpdateEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentCall {
    return try Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func deleteEnvironment(_ request: Bucketeer_Environment_DeleteEnvironmentRequest, metadata customMetadata: Metadata) throws -> Bucketeer_Environment_DeleteEnvironmentResponse {
    return try Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func deleteEnvironment(_ request: Bucketeer_Environment_DeleteEnvironmentRequest, metadata customMetadata: Metadata, completion: @escaping (Bucketeer_Environment_DeleteEnvironmentResponse?, CallResult) -> Void) throws -> Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentCall {
    return try Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Bucketeer_Environment_EnvironmentServiceProvider: ServiceProvider {
  func getEnvironment(request: Bucketeer_Environment_GetEnvironmentRequest, session: Bucketeer_Environment_EnvironmentServiceGetEnvironmentSession) throws -> Bucketeer_Environment_GetEnvironmentResponse
  func getEnvironmentByNamespace(request: Bucketeer_Environment_GetEnvironmentByNamespaceRequest, session: Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceSession) throws -> Bucketeer_Environment_GetEnvironmentByNamespaceResponse
  func listEnvironments(request: Bucketeer_Environment_ListEnvironmentsRequest, session: Bucketeer_Environment_EnvironmentServiceListEnvironmentsSession) throws -> Bucketeer_Environment_ListEnvironmentsResponse
  func createEnvironment(request: Bucketeer_Environment_CreateEnvironmentRequest, session: Bucketeer_Environment_EnvironmentServiceCreateEnvironmentSession) throws -> Bucketeer_Environment_CreateEnvironmentResponse
  func updateEnvironment(request: Bucketeer_Environment_UpdateEnvironmentRequest, session: Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentSession) throws -> Bucketeer_Environment_UpdateEnvironmentResponse
  func deleteEnvironment(request: Bucketeer_Environment_DeleteEnvironmentRequest, session: Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentSession) throws -> Bucketeer_Environment_DeleteEnvironmentResponse
}

extension Bucketeer_Environment_EnvironmentServiceProvider {
  internal var serviceName: String { return "bucketeer.environment.EnvironmentService" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/bucketeer.environment.EnvironmentService/GetEnvironment":
      return try Bucketeer_Environment_EnvironmentServiceGetEnvironmentSessionBase(
        handler: handler,
        providerBlock: { try self.getEnvironment(request: $0, session: $1 as! Bucketeer_Environment_EnvironmentServiceGetEnvironmentSessionBase) })
          .run()
    case "/bucketeer.environment.EnvironmentService/GetEnvironmentByNamespace":
      return try Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceSessionBase(
        handler: handler,
        providerBlock: { try self.getEnvironmentByNamespace(request: $0, session: $1 as! Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceSessionBase) })
          .run()
    case "/bucketeer.environment.EnvironmentService/ListEnvironments":
      return try Bucketeer_Environment_EnvironmentServiceListEnvironmentsSessionBase(
        handler: handler,
        providerBlock: { try self.listEnvironments(request: $0, session: $1 as! Bucketeer_Environment_EnvironmentServiceListEnvironmentsSessionBase) })
          .run()
    case "/bucketeer.environment.EnvironmentService/CreateEnvironment":
      return try Bucketeer_Environment_EnvironmentServiceCreateEnvironmentSessionBase(
        handler: handler,
        providerBlock: { try self.createEnvironment(request: $0, session: $1 as! Bucketeer_Environment_EnvironmentServiceCreateEnvironmentSessionBase) })
          .run()
    case "/bucketeer.environment.EnvironmentService/UpdateEnvironment":
      return try Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentSessionBase(
        handler: handler,
        providerBlock: { try self.updateEnvironment(request: $0, session: $1 as! Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentSessionBase) })
          .run()
    case "/bucketeer.environment.EnvironmentService/DeleteEnvironment":
      return try Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentSessionBase(
        handler: handler,
        providerBlock: { try self.deleteEnvironment(request: $0, session: $1 as! Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Bucketeer_Environment_EnvironmentServiceGetEnvironmentSession: ServerSessionUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceGetEnvironmentSessionBase: ServerSessionUnaryBase<Bucketeer_Environment_GetEnvironmentRequest, Bucketeer_Environment_GetEnvironmentResponse>, Bucketeer_Environment_EnvironmentServiceGetEnvironmentSession {}

internal protocol Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceSession: ServerSessionUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceSessionBase: ServerSessionUnaryBase<Bucketeer_Environment_GetEnvironmentByNamespaceRequest, Bucketeer_Environment_GetEnvironmentByNamespaceResponse>, Bucketeer_Environment_EnvironmentServiceGetEnvironmentByNamespaceSession {}

internal protocol Bucketeer_Environment_EnvironmentServiceListEnvironmentsSession: ServerSessionUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceListEnvironmentsSessionBase: ServerSessionUnaryBase<Bucketeer_Environment_ListEnvironmentsRequest, Bucketeer_Environment_ListEnvironmentsResponse>, Bucketeer_Environment_EnvironmentServiceListEnvironmentsSession {}

internal protocol Bucketeer_Environment_EnvironmentServiceCreateEnvironmentSession: ServerSessionUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceCreateEnvironmentSessionBase: ServerSessionUnaryBase<Bucketeer_Environment_CreateEnvironmentRequest, Bucketeer_Environment_CreateEnvironmentResponse>, Bucketeer_Environment_EnvironmentServiceCreateEnvironmentSession {}

internal protocol Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentSession: ServerSessionUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentSessionBase: ServerSessionUnaryBase<Bucketeer_Environment_UpdateEnvironmentRequest, Bucketeer_Environment_UpdateEnvironmentResponse>, Bucketeer_Environment_EnvironmentServiceUpdateEnvironmentSession {}

internal protocol Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentSession: ServerSessionUnary {}

fileprivate final class Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentSessionBase: ServerSessionUnaryBase<Bucketeer_Environment_DeleteEnvironmentRequest, Bucketeer_Environment_DeleteEnvironmentResponse>, Bucketeer_Environment_EnvironmentServiceDeleteEnvironmentSession {}

